/*
 * MIT License
 *
 * Copyright (c) 2023 tuxming@sina.com / wechat: angft1
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 *//*
 * MIT License
 *
 * Copyright (c) 2023 tuxming@sina.com / wechat: angft1
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */package com.xm2013.admin.domain.base;

import com.jfinal.plugin.activerecord.Model;
import com.jfinal.plugin.activerecord.IBean;
import com.xm2013.admin.jfinal.generator.Col;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings({"serial", "unchecked"})
public abstract class BaseDict<M extends BaseDict<M>> extends Model<M> implements IBean {

	public static String COL_ID = "id";
	/**
	 * 分类名
	 */
	public static String COL_GROUP_NAME = "group_name";
	/**
	 * key
	 */
	public static String COL_DICT_KEY = "dict_key";
	/**
	 * 值
	 */
	public static String COL_DICT_VALUE = "dict_value";
	/**
	 * 显示名
	 */
	public static String COL_DICT_LABEL = "dict_label";
	/**
	 * 值类型：0-文本，1-数值，3-图片id, 4-json
	 */
	public static String COL_TYPE = "type";
	/**
	 * 附加值
	 */
	public static String COL_REMARK = "remark";

	public M setId(java.lang.Integer id) {
		set("id", id);
		return (M)this;
	}
	
	@Col(tableName = "sys_dict", tableLabel="字典表", 
		fieldName = "id", colName = "id", 
		label = "")
	public java.lang.Integer getId() {
		return getInt("id");
	}

	/**
	 * 分类名
	 */
	public M setGroupName(java.lang.String groupName) {
		set("group_name", groupName);
		return (M)this;
	}
	
	/**
	 * 分类名
	 */
	@Col(tableName = "sys_dict", tableLabel="字典表", 
		fieldName = "groupName", colName = "group_name", 
		label = "分类名")
	public java.lang.String getGroupName() {
		return getStr("group_name");
	}

	/**
	 * key
	 */
	public M setDictKey(java.lang.String dictKey) {
		set("dict_key", dictKey);
		return (M)this;
	}
	
	/**
	 * key
	 */
	@Col(tableName = "sys_dict", tableLabel="字典表", 
		fieldName = "dictKey", colName = "dict_key", 
		label = "key")
	public java.lang.String getDictKey() {
		return getStr("dict_key");
	}

	/**
	 * 值
	 */
	public M setDictValue(java.lang.String dictValue) {
		set("dict_value", dictValue);
		return (M)this;
	}
	
	/**
	 * 值
	 */
	@Col(tableName = "sys_dict", tableLabel="字典表", 
		fieldName = "dictValue", colName = "dict_value", 
		label = "值")
	public java.lang.String getDictValue() {
		return getStr("dict_value");
	}

	/**
	 * 显示名
	 */
	public M setDictLabel(java.lang.String dictLabel) {
		set("dict_label", dictLabel);
		return (M)this;
	}
	
	/**
	 * 显示名
	 */
	@Col(tableName = "sys_dict", tableLabel="字典表", 
		fieldName = "dictLabel", colName = "dict_label", 
		label = "显示名")
	public java.lang.String getDictLabel() {
		return getStr("dict_label");
	}

	/**
	 * 值类型：0-文本，1-数值，3-图片id, 4-json
	 */
	public M setType(java.lang.Integer type) {
		set("type", type);
		return (M)this;
	}
	
	/**
	 * 值类型：0-文本，1-数值，3-图片id, 4-json
	 */
	@Col(tableName = "sys_dict", tableLabel="字典表", 
		fieldName = "type", colName = "type", 
		label = "值类型：0-文本，1-数值，3-图片id, 4-json")
	public java.lang.Integer getType() {
		return getInt("type");
	}

	/**
	 * 附加值
	 */
	public M setRemark(java.lang.String remark) {
		set("remark", remark);
		return (M)this;
	}
	
	/**
	 * 附加值
	 */
	@Col(tableName = "sys_dict", tableLabel="字典表", 
		fieldName = "remark", colName = "remark", 
		label = "附加值")
	public java.lang.String getRemark() {
		return getStr("remark");
	}

}

